name: Build Android Binary v2

on:
  workflow_dispatch: # Enables manual triggering of the workflow
  push:
    tags:
    - v[0-9]+.[0-9]+.[0-9]+* # Запускается при push тега, но можно закомментировать

jobs:
  build:
    name: Build for Android
    permissions:
      contents: read  # No need for write permission

    strategy:
      matrix:
        include:
        - target: aarch64-linux-android
          os: ubuntu-latest
          use-cross: true
          cargo-flags: ""
        - target: armv7-unknown-linux-musleabihf
          os: ubuntu-latest
          use-cross: true
          cargo-flags: ""
        # Добавьте или удалите другие цели, которые вам нужны
        # Например:
        # - target: x86_64-linux-android
        #   os: ubuntu-latest
        #   use-cross: true
        #   cargo-flags: ""

    runs-on: ${{matrix.os}}
    env:
      BUILD_CMD: cargo

    steps:
    - uses: actions/checkout@v4

    - name: Check Tag
      id: check-tag
      shell: bash
      run: |
        ver=${GITHUB_REF##*/}
        echo "version=$ver" >> $GITHUB_OUTPUT
        if [[ "$ver" =~ [0-9]+.[0-9]+.[0-9]+$ ]]; then
          echo "rc=false" >> $GITHUB_OUTPUT
        else
          echo "rc=true" >> $GITHUB_OUTPUT
        fi

    - name: Install Rust Toolchain Components
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross
      if: matrix.use-cross
      uses: taiki-e/install-action@v2
      with:
        tool: cross

    - name: Overwrite build command env variable
      if: matrix.use-cross
      shell: bash
      run: echo "BUILD_CMD=cross" >> $GITHUB_ENV

    - name: Show Version Information (Rust, cargo, GCC)
      shell: bash
      run: |
        gcc --version || true
        rustup -V
        rustup toolchain list
        rustup default
        cargo -V
        rustc -V

    - name: Build
      shell: bash
      run: $BUILD_CMD build --locked --release --target=${{ matrix.target }} ${{ matrix.cargo-flags }}

    - name: Build Archive
      shell: bash
      id: package
      env:
        target: ${{ matrix.target }}
        version:  ${{ steps.check-tag.outputs.version }}
      run: |
        set -euxo pipefail

        bin=${GITHUB_REPOSITORY##*/}
        dist_dir=`pwd`/dist
        name=$bin-$version-$target
        executable=target/$target/release/$bin

        if [[ "$RUNNER_OS" == "Windows" ]]; then
          executable=$executable.exe
        fi

        mkdir $dist_dir
        cp $executable $dist_dir
        cd $dist_dir

        if [[ "$RUNNER_OS" == "Windows" ]]; then
            archive=$dist_dir/$name.zip
            7z a $archive *
            echo "archive=dist/$name.zip" >> $GITHUB_OUTPUT
        else
            archive=$dist_dir/$name.tar.gz
            tar -czf $archive *
            echo "archive=dist/$name.tar.gz" >> $GITHUB_OUTPUT
        fi

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: android-binary-${{ matrix.target }}
        path: dist/${{ steps.package.outputs.archive }}

